" Directories ================================================================
silent !mkdir -p ~/.local/share/vim > /dev/null 2>&1
silent !mkdir -p ~/.cache/vim > /dev/null 2>&1


" Essentials =================================================================
set nocompatible	    " Break compatibility with vi
set t_Co=256		    " 256 colour terminal
let mapleader=' '	    " Map leader


" Plugins ====================================================================
set rtp+=~/.local/share/vim	    " Runtime path

call plug#begin('~/.local/share/vim/plugins')
Plug 'scrooloose/nerdtree'
Plug 'luochen1990/rainbow'
Plug 'vim-scripts/indentpython.vim'
Plug 'scrooloose/syntastic'
Plug 'nvie/vim-flake8'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'kien/ctrlp.vim'
Plug 'tpope/vim-fugitive'
Plug 'Valloric/YouCompleteMe', { 'for': 'python' }
Plug 'fatih/vim-go', { 'for': 'go' }
Plug 'powerline/powerline', { 'rtp': 'powerline/bindings/vim/' }

" Color schemes
Plug 'altercation/vim-colors-solarized'
Plug 'jnurmine/Zenburn'
Plug 'morhetz/gruvbox'
call plug#end()


" UI ==========================================================================
filetype plugin indent on   " Load filetype specific plugins
syntax on                   " Syntax highlighting
set showcmd                 " Show (partial) command in the last line
set ruler                   " Cursor coordinates
set number                  " Line numbers
set nobackup writebackup    " Keep backup only while file is being written
set visualbell t_vb=        " Stop the annoying beep
set laststatus=2            " Always show status line
set statusline=%F           " Status line
set cursorline              " Show curser line
set scrolloff=4             " Leave 4 lines above/below screen top/bottom
set background=dark         " Assume dark background
set listchars=tab:>-,eol:$  " Show tabs correctly with 'set list'
let g:rainbow_active=1      " Enable rainbow brackets
highlight TrWhiteSpace ctermbg=red guibg=red
match TrWhiteSpace /\s\+$/  " Highlight trailing whitespaces


" Key Bindings ===============================================================
set pastetoggle=<leader>p       " Toggle paste mode
nmap <F2> :let &background = ( &background == "dark"? "light" : "dark" ) <CR>
                                " Toggle background between light and dark
nmap <F3> :set number! <CR>     " Toggle line numbers
nmap <F4> :NERDTreeToggle <CR>  " Toggle NERDTree pane
nmap <F6> :let &cc = ( &cc == 0 ? 81 : 0 ) <CR>
                                " Toggle 80 character boundary
nmap <F7> :set list! <CR>       " Toggle list mode
nmap <C-d> :sh <CR>             " Switch to shell
nmap <silent> <leader><esc> :let @/="" <CR>
                                " Turn off highlighting
nnoremap n nzzzv                " Keep matches in the middle of the window
nnoremap N Nzzzv                " Keep matches in the middle of the window
nnoremap <C-N> :next <CR>		" Next buffer
nnoremap <C-P> :prev <CR>       " Previous buffer
nmap <leader>s :%s/\s\+$//<CR>  " Remove traling whitespaces
nmap <leader>S :%s/^\s\+//<CR>  " Remove leading whitespaces


" Indentation =================================================================
set autoindent      " New lines get indentation from current
set smartindent     " Autoindent after braces
set tabstop=4       " Columns per Tab - affects how existing text is displayed
set shiftwidth=4    " Columns per Tab for reindent
set softtabstop=4   " Columns per Tab in insert mode
set expandtab       " Replace Tabs by Spaces
set shiftround      " Round indent to multiple of 'shiftwidth'
set indentkeys=!^F,o,O,<:>,0),0],0},=elif,=except,0#
                    " Don't indent to the left when pressing the # key


" FileType Specific Settings =================================================
autocmd FileType go set noet ts=4
autocmd FileType make set noet ts=8
autocmd FileType yaml set softtabstop=2 shiftwidth=2


" Typing ======================================================================
set backspace=indent,eol,start  " Backspace over everything in insert mode
set showmatch                   " Briefly jump to matching brackets
set matchtime=1                 " Show bracket match very briefly


" Searching ===================================================================
set ignorecase                  " Case-insensitive search
set smartcase                   " Unless at least 1 letter is capitalized
set hlsearch                    " Highligh search results
set incsearch                   " Highlight search as you type


" Miscelaneous ================================================================
set viminfo+=n~/.cache/vim/viminfo          " Store viminfo in cache directory
" let g:netrw_home='/u/raisa/.cache/vim'    " Store netrwhist in cache directory

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis | wincmd p | diffthis

" When editing a file, always jump to the last known cursor position.
" Don't do it when the position is invalid or when inside an event handler
" (happens when dropping a file on gvim).
" Also don't do it when the mark is in the first line, that is the default
" position when opening a file.
autocmd BufReadPost *
\ if line("'\"") > 1 && line("'\"") <= line("$") |
\   exe "normal! g`\"" |
\ endif

